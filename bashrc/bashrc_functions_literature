# Scientific literature-related
# =============================

# NOTE: THIS USES ALIASES FROM bashrc_functions_pdf

# Download a file from biorXiv with a given filename
# Standard crop size is 60, `recropreading()` as needed
# Usage:
#    paperdl http://biorxiv.org/XYZ.pdf filename
# 
#    Where filename is in the format 'surname16_abbrev-title' or 'surname16_abbrev-title.pdf'
#    (.pdf extension will be added automatically if not provided)
function paperdl() {
	# TODO if no filename passed in then ask for it (reuse code)
	if [ -z $2 ]; then >&2 echo "No filename provided"; return 1; fi
	# if filename passed in ends with PDF
	if [ "${2##*.}" = 'pdf' ]; then paperdl_file="$2"; else paperdl_file="$2.pdf"; fi
	local wgetflags=''
	if [ $(URLPARSEpaperdl "arxiv.org/pdf/1403.6320.pdf") == 'arxiv.org' ]; then
		wgetflags="$wgetflags"' --user-agent="Lynx"'
	fi
	wget -O $paperdl_file $1 $wgetflags
	addreading $paperdl_file 60
	>&2 printf "Do you want to take notes while you read? [Press space to open editR and the PDF] : "
	read -d'' -s -n1 -r
	if [ "$REPLY" = ' ' ]; then
		# Skip the note creation check as it's a new file
		>&2 echo "\nEditing file now..."
		readnwrite "$paperdl_file" "--skip-create-check" # opens markdown editor
		return 0
	fi
	>&2 printf "\nDo you want to read it? [Press enter to open the default PDF viewer or any other key to finish] : "
	read -d'' -s -n1 -r
	if [ "$REPLY" = $'\x0a' ]; then
		>&2 echo "Opening file in a PDF viewer now..."
		xdg-open "$paperdl_file"
	fi
	paperdl_note_file=$(findnote "$paperdl_file" "--skip-create-check")
	>&2 echo -e "\nDone. File written to $(pathto $paperdl_file), note file created at $(pathto $paperdl_note_file)."
	return 0
}


# capitalised to avoid tab completion ('internal' function, not for users)
function URLPARSEpaperdl () {
	local URL=$1
	if [ $# -gt 1 ]; then
		>&2 echo "Multiple strings detected by URLPARSEpaperdl function (URLs cannot contain spaces!)"
		return 1
	fi
	python -c "from urllib.parse import urlparse
if '$URL'.find('://') == -1:
  url = urlparse('//$URL','http')
else:
  url = urlparse('$URL')
print(url.netloc)"
}
